//#line 2 "/opt/ros/fuerte/stacks/dynamic_reconfigure/templates/ConfigType.h"
// *********************************************************
// 
// File autogenerated for the opt_camera package 
// by the dynamic_reconfigure package.
// Please do not edit.
// 
// ********************************************************/

/***********************************************************
 * Software License Agreement (BSD License)
 *
 *  Copyright (c) 2008, Willow Garage, Inc.
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 *   * Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above
 *     copyright notice, this list of conditions and the following
 *     disclaimer in the documentation and/or other materials provided
 *     with the distribution.
 *   * Neither the name of the Willow Garage nor the names of its
 *     contributors may be used to endorse or promote products derived
 *     from this software without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 ***********************************************************/

// Author: Blaise Gassend


#ifndef __opt_camera__OPTNM33CAMERACONFIG_H__
#define __opt_camera__OPTNM33CAMERACONFIG_H__

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace opt_camera
{
  class OptNM33CameraConfigStatics;
  
  class OptNM33CameraConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l, 
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }
      
      virtual void clamp(OptNM33CameraConfig &config, const OptNM33CameraConfig &max, const OptNM33CameraConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const OptNM33CameraConfig &config1, const OptNM33CameraConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, OptNM33CameraConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const OptNM33CameraConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, OptNM33CameraConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const OptNM33CameraConfig &config) const = 0;
      virtual void getValue(const OptNM33CameraConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;
    
    template <class T>
    class ParamDescription : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string name, std::string type, uint32_t level, 
          std::string description, std::string edit_method, T OptNM33CameraConfig::* f) :
        AbstractParamDescription(name, type, level, description, edit_method),
        field(f)
      {}

      T (OptNM33CameraConfig::* field);

      virtual void clamp(OptNM33CameraConfig &config, const OptNM33CameraConfig &max, const OptNM33CameraConfig &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;
        
        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const OptNM33CameraConfig &config1, const OptNM33CameraConfig &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, OptNM33CameraConfig &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const OptNM33CameraConfig &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, OptNM33CameraConfig &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const OptNM33CameraConfig &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const OptNM33CameraConfig &config, boost::any &val) const
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, OptNM33CameraConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); i++)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    template<class T, class PT>
    class GroupDescription : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string name, std::string type, int parent, int id, bool s, T PT::* f) : AbstractGroupDescription(name, type, parent, id, s), field(f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;
        
        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); i++) 
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); i++)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }
      
      virtual void updateParams(boost::any &cfg, OptNM33CameraConfig &top) const
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); i++) 
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); i++)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T (PT::* field);
      std::vector<OptNM33CameraConfig::AbstractGroupDescriptionConstPtr> groups;
    };
    
class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(OptNM33CameraConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = params.begin(); i != params.end(); i++)
      {
        boost::any val;
        (*i)->getValue(config, val);

        if("autoexposure"==(*i)->name){autoexposure = boost::any_cast<bool>(val);}
        if("exposure"==(*i)->name){exposure = boost::any_cast<int>(val);}
        if("iris"==(*i)->name){iris = boost::any_cast<int>(val);}
        if("mode"==(*i)->name){mode = boost::any_cast<int>(val);}
        if("brightness"==(*i)->name){brightness = boost::any_cast<int>(val);}
        if("sharpness"==(*i)->name){sharpness = boost::any_cast<int>(val);}
        if("whitebalance"==(*i)->name){whitebalance = boost::any_cast<int>(val);}
        if("autowhitebalance"==(*i)->name){autowhitebalance = boost::any_cast<bool>(val);}
        if("pan"==(*i)->name){pan = boost::any_cast<double>(val);}
        if("tilt"==(*i)->name){tilt = boost::any_cast<double>(val);}
        if("roll"==(*i)->name){roll = boost::any_cast<double>(val);}
        if("zoom"==(*i)->name){zoom = boost::any_cast<double>(val);}
        if("firmwareversion"==(*i)->name){firmwareversion = boost::any_cast<std::string>(val);}
        if("serialid"==(*i)->name){serialid = boost::any_cast<std::string>(val);}
        if("flipscreen"==(*i)->name){flipscreen = boost::any_cast<int>(val);}
        if("smallhemisphere"==(*i)->name){smallhemisphere = boost::any_cast<int>(val);}
        if("medianfilter"==(*i)->name){medianfilter = boost::any_cast<bool>(val);}
        if("jpegquality"==(*i)->name){jpegquality = boost::any_cast<int>(val);}
        if("infodisplay"==(*i)->name){infodisplay = boost::any_cast<bool>(val);}
        if("capturefps"==(*i)->name){capturefps = boost::any_cast<int>(val);}
        if("actualfps"==(*i)->name){actualfps = boost::any_cast<int>(val);}
        if("lenstype"==(*i)->name){lenstype = boost::any_cast<int>(val);}
        if("camera1_pan"==(*i)->name){camera1_pan = boost::any_cast<int>(val);}
        if("camera1_tilt"==(*i)->name){camera1_tilt = boost::any_cast<int>(val);}
        if("camera1_roll"==(*i)->name){camera1_roll = boost::any_cast<int>(val);}
        if("camera1_zoom"==(*i)->name){camera1_zoom = boost::any_cast<int>(val);}
        if("camera2_pan"==(*i)->name){camera2_pan = boost::any_cast<int>(val);}
        if("camera2_tilt"==(*i)->name){camera2_tilt = boost::any_cast<int>(val);}
        if("camera2_roll"==(*i)->name){camera2_roll = boost::any_cast<int>(val);}
        if("camera2_zoom"==(*i)->name){camera2_zoom = boost::any_cast<int>(val);}
        if("camera3_pan"==(*i)->name){camera3_pan = boost::any_cast<int>(val);}
        if("camera3_tilt"==(*i)->name){camera3_tilt = boost::any_cast<int>(val);}
        if("camera3_roll"==(*i)->name){camera3_roll = boost::any_cast<int>(val);}
        if("camera3_zoom"==(*i)->name){camera3_zoom = boost::any_cast<int>(val);}
      }
    }

    bool autoexposure;
int exposure;
int iris;
int mode;
int brightness;
int sharpness;
int whitebalance;
bool autowhitebalance;
double pan;
double tilt;
double roll;
double zoom;
std::string firmwareversion;
std::string serialid;
int flipscreen;
int smallhemisphere;
bool medianfilter;
int jpegquality;
bool infodisplay;
int capturefps;
int actualfps;
int lenstype;
int camera1_pan;
int camera1_tilt;
int camera1_roll;
int camera1_zoom;
int camera2_pan;
int camera2_tilt;
int camera2_roll;
int camera2_zoom;
int camera3_pan;
int camera3_tilt;
int camera3_roll;
int camera3_zoom;

    bool state;
    std::string name;

    
}groups;



//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      bool autoexposure;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int exposure;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int iris;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int mode;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int brightness;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int sharpness;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int whitebalance;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      bool autowhitebalance;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      double pan;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      double tilt;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      double roll;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      double zoom;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      std::string firmwareversion;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      std::string serialid;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int flipscreen;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int smallhemisphere;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      bool medianfilter;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int jpegquality;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      bool infodisplay;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int capturefps;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int actualfps;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int lenstype;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int camera1_pan;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int camera1_tilt;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int camera1_roll;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int camera1_zoom;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int camera2_pan;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int camera2_tilt;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int camera2_roll;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int camera2_zoom;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int camera3_pan;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int camera3_tilt;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int camera3_roll;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int camera3_zoom;
//#line 255 "/opt/ros/fuerte/stacks/dynamic_reconfigure/templates/ConfigType.h"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("OptNM33CameraConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }
    
    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }
    
    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const OptNM33CameraConfig &__max__ = __getMax__();
      const OptNM33CameraConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const OptNM33CameraConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        (*i)->calcLevel(level, config, *this);
      return level;
    }
    
    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const OptNM33CameraConfig &__getDefault__();
    static const OptNM33CameraConfig &__getMax__();
    static const OptNM33CameraConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();
    
  private:
    static const OptNM33CameraConfigStatics *__get_statics__();
  };
  
  template <> // Max and min are ignored for strings.
  inline void OptNM33CameraConfig::ParamDescription<std::string>::clamp(OptNM33CameraConfig &config, const OptNM33CameraConfig &max, const OptNM33CameraConfig &min) const
  {
    return;
  }

  class OptNM33CameraConfigStatics
  {
    friend class OptNM33CameraConfig;
    
    OptNM33CameraConfigStatics()
    {
OptNM33CameraConfig::GroupDescription<OptNM33CameraConfig::DEFAULT, OptNM33CameraConfig> Default("Default", "", 0, 0, true, &OptNM33CameraConfig::groups);
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.autoexposure = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.autoexposure = 1;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.autoexposure = 1;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<bool>("autoexposure", "bool", 0, "Auto Exposure", "", &OptNM33CameraConfig::autoexposure)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<bool>("autoexposure", "bool", 0, "Auto Exposure", "", &OptNM33CameraConfig::autoexposure)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.exposure = 10;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.exposure = 5000;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.exposure = 500;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("exposure", "int", 0, "Exposure", "", &OptNM33CameraConfig::exposure)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("exposure", "int", 0, "Exposure", "", &OptNM33CameraConfig::exposure)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.iris = 1;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.iris = 3200;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.iris = 500;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("iris", "int", 0, "IRIS", "", &OptNM33CameraConfig::iris)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("iris", "int", 0, "IRIS", "", &OptNM33CameraConfig::iris)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.mode = -2147483648;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.mode = 2147483647;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.mode = 4;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("mode", "int", 0, "Mode", "{'enum_description': 'Enum to set the camera mode.', 'enum': [{'srcline': 19, 'description': 'Ring mode', 'srcfile': '../cfg/OptNM33Camera.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'ring'}, {'srcline': 20, 'description': 'Zoom mode', 'srcfile': '../cfg/OptNM33Camera.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'zoom'}, {'srcline': 21, 'description': 'Panorama mode', 'srcfile': '../cfg/OptNM33Camera.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'panorama'}, {'srcline': 22, 'description': 'Orthogonal mode', 'srcfile': '../cfg/OptNM33Camera.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'orthogonal'}, {'srcline': 23, 'description': 'JSK Robot mode', 'srcfile': '../cfg/OptNM33Camera.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': '4view'}]}", &OptNM33CameraConfig::mode)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("mode", "int", 0, "Mode", "{'enum_description': 'Enum to set the camera mode.', 'enum': [{'srcline': 19, 'description': 'Ring mode', 'srcfile': '../cfg/OptNM33Camera.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'ring'}, {'srcline': 20, 'description': 'Zoom mode', 'srcfile': '../cfg/OptNM33Camera.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'zoom'}, {'srcline': 21, 'description': 'Panorama mode', 'srcfile': '../cfg/OptNM33Camera.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'panorama'}, {'srcline': 22, 'description': 'Orthogonal mode', 'srcfile': '../cfg/OptNM33Camera.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'orthogonal'}, {'srcline': 23, 'description': 'JSK Robot mode', 'srcfile': '../cfg/OptNM33Camera.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': '4view'}]}", &OptNM33CameraConfig::mode)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.brightness = 100;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.brightness = 1000;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.brightness = 220;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("brightness", "int", 0, "Brightness", "", &OptNM33CameraConfig::brightness)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("brightness", "int", 0, "Brightness", "", &OptNM33CameraConfig::brightness)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.sharpness = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.sharpness = 8;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.sharpness = 4;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("sharpness", "int", 0, "Sharpness", "", &OptNM33CameraConfig::sharpness)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("sharpness", "int", 0, "Sharpness", "", &OptNM33CameraConfig::sharpness)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.whitebalance = 2800;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.whitebalance = 10000;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.whitebalance = 6500;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("whitebalance", "int", 0, "WhiteBalance", "", &OptNM33CameraConfig::whitebalance)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("whitebalance", "int", 0, "WhiteBalance", "", &OptNM33CameraConfig::whitebalance)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.autowhitebalance = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.autowhitebalance = 1;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.autowhitebalance = 1;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<bool>("autowhitebalance", "bool", 0, "Auto WhiteBalance", "", &OptNM33CameraConfig::autowhitebalance)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<bool>("autowhitebalance", "bool", 0, "Auto WhiteBalance", "", &OptNM33CameraConfig::autowhitebalance)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.pan = -180.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.pan = 180.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.pan = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<double>("pan", "double", 0, "Pan", "", &OptNM33CameraConfig::pan)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<double>("pan", "double", 0, "Pan", "", &OptNM33CameraConfig::pan)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.tilt = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.tilt = 107.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.tilt = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<double>("tilt", "double", 0, "Tilt", "", &OptNM33CameraConfig::tilt)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<double>("tilt", "double", 0, "Tilt", "", &OptNM33CameraConfig::tilt)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.roll = -180.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.roll = 180.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.roll = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<double>("roll", "double", 0, "Roll", "", &OptNM33CameraConfig::roll)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<double>("roll", "double", 0, "Roll", "", &OptNM33CameraConfig::roll)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.zoom = 1.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.zoom = 1500.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.zoom = 100.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<double>("zoom", "double", 0, "Zoom", "", &OptNM33CameraConfig::zoom)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<double>("zoom", "double", 0, "Zoom", "", &OptNM33CameraConfig::zoom)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.firmwareversion = "";
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.firmwareversion = "";
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.firmwareversion = "";
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<std::string>("firmwareversion", "str", 0, "Firemware version", "", &OptNM33CameraConfig::firmwareversion)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<std::string>("firmwareversion", "str", 0, "Firemware version", "", &OptNM33CameraConfig::firmwareversion)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.serialid = "";
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.serialid = "";
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.serialid = "";
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<std::string>("serialid", "str", 0, "Serial Number", "", &OptNM33CameraConfig::serialid)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<std::string>("serialid", "str", 0, "Serial Number", "", &OptNM33CameraConfig::serialid)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.flipscreen = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.flipscreen = 3;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.flipscreen = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("flipscreen", "int", 0, "Flip screen", "", &OptNM33CameraConfig::flipscreen)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("flipscreen", "int", 0, "Flip screen", "", &OptNM33CameraConfig::flipscreen)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.smallhemisphere = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.smallhemisphere = 9;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.smallhemisphere = 1;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("smallhemisphere", "int", 0, "Small Hemisphere", "", &OptNM33CameraConfig::smallhemisphere)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("smallhemisphere", "int", 0, "Small Hemisphere", "", &OptNM33CameraConfig::smallhemisphere)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.medianfilter = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.medianfilter = 1;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.medianfilter = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<bool>("medianfilter", "bool", 0, "Median Filter", "", &OptNM33CameraConfig::medianfilter)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<bool>("medianfilter", "bool", 0, "Median Filter", "", &OptNM33CameraConfig::medianfilter)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.jpegquality = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.jpegquality = 99;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.jpegquality = 75;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("jpegquality", "int", 0, "Jpeg Quality", "", &OptNM33CameraConfig::jpegquality)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("jpegquality", "int", 0, "Jpeg Quality", "", &OptNM33CameraConfig::jpegquality)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.infodisplay = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.infodisplay = 1;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.infodisplay = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<bool>("infodisplay", "bool", 2, "Info Display", "", &OptNM33CameraConfig::infodisplay)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<bool>("infodisplay", "bool", 2, "Info Display", "", &OptNM33CameraConfig::infodisplay)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.capturefps = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.capturefps = 300;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.capturefps = 150;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("capturefps", "int", 4, "Capture FPS", "", &OptNM33CameraConfig::capturefps)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("capturefps", "int", 4, "Capture FPS", "", &OptNM33CameraConfig::capturefps)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.actualfps = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.actualfps = 300;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.actualfps = 150;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("actualfps", "int", 8, "Actual FPS", "", &OptNM33CameraConfig::actualfps)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("actualfps", "int", 8, "Actual FPS", "", &OptNM33CameraConfig::actualfps)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.lenstype = -2147483648;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.lenstype = 2147483647;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.lenstype = 2;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("lenstype", "int", 16, "Lens Type", "{'enum_description': 'Enum to set the lens mode.', 'enum': [{'srcline': 49, 'description': 'Sony Lens', 'srcfile': '../cfg/OptNM33Camera.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'sony'}, {'srcline': 50, 'description': 'Opt Lens', 'srcfile': '../cfg/OptNM33Camera.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'opt'}, {'srcline': 51, 'description': 'Fit Lens', 'srcfile': '../cfg/OptNM33Camera.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'fit'}, {'srcline': 52, 'description': 'Depression Lens', 'srcfile': '../cfg/OptNM33Camera.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'depression'}]}", &OptNM33CameraConfig::lenstype)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("lenstype", "int", 16, "Lens Type", "{'enum_description': 'Enum to set the lens mode.', 'enum': [{'srcline': 49, 'description': 'Sony Lens', 'srcfile': '../cfg/OptNM33Camera.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'sony'}, {'srcline': 50, 'description': 'Opt Lens', 'srcfile': '../cfg/OptNM33Camera.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'opt'}, {'srcline': 51, 'description': 'Fit Lens', 'srcfile': '../cfg/OptNM33Camera.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'fit'}, {'srcline': 52, 'description': 'Depression Lens', 'srcfile': '../cfg/OptNM33Camera.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'depression'}]}", &OptNM33CameraConfig::lenstype)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.camera1_pan = -180;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.camera1_pan = 180;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.camera1_pan = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("camera1_pan", "int", 0, "Camera 1 Pan", "", &OptNM33CameraConfig::camera1_pan)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("camera1_pan", "int", 0, "Camera 1 Pan", "", &OptNM33CameraConfig::camera1_pan)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.camera1_tilt = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.camera1_tilt = 90;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.camera1_tilt = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("camera1_tilt", "int", 0, "Camera 1 Tilt", "", &OptNM33CameraConfig::camera1_tilt)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("camera1_tilt", "int", 0, "Camera 1 Tilt", "", &OptNM33CameraConfig::camera1_tilt)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.camera1_roll = -180;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.camera1_roll = 180;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.camera1_roll = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("camera1_roll", "int", 0, "Camera 1 Roll", "", &OptNM33CameraConfig::camera1_roll)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("camera1_roll", "int", 0, "Camera 1 Roll", "", &OptNM33CameraConfig::camera1_roll)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.camera1_zoom = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.camera1_zoom = 1500;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.camera1_zoom = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("camera1_zoom", "int", 0, "Camera 1 Zoom", "", &OptNM33CameraConfig::camera1_zoom)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("camera1_zoom", "int", 0, "Camera 1 Zoom", "", &OptNM33CameraConfig::camera1_zoom)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.camera2_pan = -180;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.camera2_pan = 180;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.camera2_pan = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("camera2_pan", "int", 0, "Camera 2 Pan", "", &OptNM33CameraConfig::camera2_pan)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("camera2_pan", "int", 0, "Camera 2 Pan", "", &OptNM33CameraConfig::camera2_pan)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.camera2_tilt = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.camera2_tilt = 90;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.camera2_tilt = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("camera2_tilt", "int", 0, "Camera 2 Tilt", "", &OptNM33CameraConfig::camera2_tilt)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("camera2_tilt", "int", 0, "Camera 2 Tilt", "", &OptNM33CameraConfig::camera2_tilt)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.camera2_roll = -180;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.camera2_roll = 180;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.camera2_roll = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("camera2_roll", "int", 0, "Camera 2 Roll", "", &OptNM33CameraConfig::camera2_roll)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("camera2_roll", "int", 0, "Camera 2 Roll", "", &OptNM33CameraConfig::camera2_roll)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.camera2_zoom = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.camera2_zoom = 1500;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.camera2_zoom = 80;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("camera2_zoom", "int", 0, "Camera 2 Zoom", "", &OptNM33CameraConfig::camera2_zoom)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("camera2_zoom", "int", 0, "Camera 2 Zoom", "", &OptNM33CameraConfig::camera2_zoom)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.camera3_pan = -180;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.camera3_pan = 180;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.camera3_pan = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("camera3_pan", "int", 0, "Camera 3 Pan", "", &OptNM33CameraConfig::camera3_pan)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("camera3_pan", "int", 0, "Camera 3 Pan", "", &OptNM33CameraConfig::camera3_pan)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.camera3_tilt = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.camera3_tilt = 90;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.camera3_tilt = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("camera3_tilt", "int", 0, "Camera 3 Tilt", "", &OptNM33CameraConfig::camera3_tilt)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("camera3_tilt", "int", 0, "Camera 3 Tilt", "", &OptNM33CameraConfig::camera3_tilt)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.camera3_roll = -180;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.camera3_roll = 180;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.camera3_roll = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("camera3_roll", "int", 0, "Camera 3 Roll", "", &OptNM33CameraConfig::camera3_roll)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("camera3_roll", "int", 0, "Camera 3 Roll", "", &OptNM33CameraConfig::camera3_roll)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.camera3_zoom = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.camera3_zoom = 1500;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.camera3_zoom = 120;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("camera3_zoom", "int", 0, "Camera 3 Zoom", "", &OptNM33CameraConfig::camera3_zoom)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(OptNM33CameraConfig::AbstractParamDescriptionConstPtr(new OptNM33CameraConfig::ParamDescription<int>("camera3_zoom", "int", 0, "Camera 3 Zoom", "", &OptNM33CameraConfig::camera3_zoom)));
//#line 233 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.convertParams();
//#line 233 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __group_descriptions__.push_back(OptNM33CameraConfig::AbstractGroupDescriptionConstPtr(new OptNM33CameraConfig::GroupDescription<OptNM33CameraConfig::DEFAULT, OptNM33CameraConfig>(Default)));
//#line 390 "/opt/ros/fuerte/stacks/dynamic_reconfigure/templates/ConfigType.h"
    
      for (std::vector<OptNM33CameraConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__); 
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__); 
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__); 
    }
    std::vector<OptNM33CameraConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<OptNM33CameraConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    OptNM33CameraConfig __max__;
    OptNM33CameraConfig __min__;
    OptNM33CameraConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const OptNM33CameraConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static OptNM33CameraConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &OptNM33CameraConfig::__getDescriptionMessage__() 
  {
    return __get_statics__()->__description_message__;
  }

  inline const OptNM33CameraConfig &OptNM33CameraConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }
  
  inline const OptNM33CameraConfig &OptNM33CameraConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }
  
  inline const OptNM33CameraConfig &OptNM33CameraConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }
  
  inline const std::vector<OptNM33CameraConfig::AbstractParamDescriptionConstPtr> &OptNM33CameraConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<OptNM33CameraConfig::AbstractGroupDescriptionConstPtr> &OptNM33CameraConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const OptNM33CameraConfigStatics *OptNM33CameraConfig::__get_statics__()
  {
    const static OptNM33CameraConfigStatics *statics;
  
    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = OptNM33CameraConfigStatics::get_instance();
    
    return statics;
  }

//#line 19 "../cfg/OptNM33Camera.cfg"
      const int OptNM33Camera_ring = 0;
//#line 20 "../cfg/OptNM33Camera.cfg"
      const int OptNM33Camera_zoom = 1;
//#line 21 "../cfg/OptNM33Camera.cfg"
      const int OptNM33Camera_panorama = 2;
//#line 22 "../cfg/OptNM33Camera.cfg"
      const int OptNM33Camera_orthogonal = 3;
//#line 23 "../cfg/OptNM33Camera.cfg"
      const int OptNM33Camera_4view = 4;
//#line 49 "../cfg/OptNM33Camera.cfg"
      const int OptNM33Camera_sony = 0;
//#line 50 "../cfg/OptNM33Camera.cfg"
      const int OptNM33Camera_opt = 1;
//#line 51 "../cfg/OptNM33Camera.cfg"
      const int OptNM33Camera_fit = 2;
//#line 52 "../cfg/OptNM33Camera.cfg"
      const int OptNM33Camera_depression = 3;
}

#endif // __OPTNM33CAMERARECONFIGURATOR_H__
